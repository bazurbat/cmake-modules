# - Sigma module

include(FindPackageHandleStandardArgs)

set(SIGMA_MRUA_INCLUDE_DIR "${SIGMA_SDK_DIR}/MRUA_src"
    CACHE PATH "")
set(SIGMA_MRUA_LIBRARY_DIR "${SIGMA_SDK_DIR}/lib"
    CACHE PATH "")

set(SIGMA_ROOTFS_INCLUDE_DIR "${SIGMA_ROOTFS_DIR}/cross_rootfs/include"
    CACHE PATH "")
set(SIGMA_ROOTFS_LIBRARY_DIR "${SIGMA_ROOTFS_DIR}/cross_rootfs/lib"
    CACHE PATH "")

set(SIGMA_DEFINITIONS
    -DALLOC_AND_RELEASE_IN_PLAY
    -DALLOW_NON_JFIF
    -DALLOW_OS_CODE
    -DAUDIO_RECCCS_HACK
    -DCRT_SCALER=DispCRTMultiScaler
    -DDECODER_DOWNMIX
    -DDMIX_IF_NO_BM
    -DDTSHD_CAPABLE_IF_ANY
    -DDTV_TUNER
    -DEM86XX_CHIP=EM86XX_CHIPID_TANGO3
    -DEM86XX_MODE=EM86XX_MODEID_STANDALONE
    -DEM86XX_REVISION=3
    -DGFX_SCALER=DispGFXMultiScaler
    -DHACK_NO_DISPLAY_STOP_CONFIRMATION
    -DHDMI_CHECK_PRIORITY_BOOST=-15
    -DMAX_IO_SIZE=128
    -DMMAP_DRAM1_SIZE=0
    -DMMAP_DirectFB_APP_SIZE=20
    -DNO_BLUE_SUPPORT
    -DNO_BM_ABOVE=48000
    -DNO_CRT_SCALER
    -DNO_DTSHD_8CH_ABOVE=48000
    -DNO_DTSXLL_DECODE
    -DNO_HW_INDEXING_SUPPORT
    -DNO_MC_DOWNSAMPLE_ABOVE=48000
    -DNO_MIX_ABOVE=48000
    -DNO_RED_SUPPORT
    -DNO_REENCODE
    -DNO_TrueHD_192K_ABOVE=6
    -DNO_TrueHD_96K_ABOVE=8
    -DPCMX_HACK_FILL_INCOMPLETE_CHUNKS
    -DPRIORITY_BOOST=-5
    -DRMPLATFORM=RMPLATFORMID_TANGO3
    -DSTC_OFFSET_MS=200
    -DUSE_LIBSAMPLES_V2
    -DWITHOUT_RMOUTPUT=1
    -DWITH_REALVIDEO=1
    -DWITH_RMHDMI=1
    -DWITH_THREADS=1
    -DWITH_XLOADED_UCODE=1
    -DXBOOT2_SMP865X=1
    -D_FILE_OFFSET_BITS=64
    -D_LARGEFILE64_SOURCE=1
    -D_LARGEFILE_SOURCE=1
    -D_REENTRANT)

set(_sigma_library_names
    llad
    rmcore
    rmcw
    rua)

list(APPEND _sigma_library_names ruaoutput)

foreach(lib ${_sigma_library_names})
    string(TOUPPER ${lib} _upper_lib)
    find_library(SIGMA_${_upper_lib}_LIBRARY ${lib}
        PATHS ${SIGMA_ROOTFS_LIBRARY_DIR} ${SIGMA_MRUA_LIBRARY_DIR}
        NO_DEFAULT_PATH)
    list(APPEND SIGMA_LIBRARIES ${SIGMA_${_upper_lib}_LIBRARY})
endforeach()

list(APPEND SIGMA_LIBRARIES ${CMAKE_DL_LIBS})

find_package_handle_standard_args(Sigma DEFAULT_MSG SIGMA_SDK_DIR
    SIGMA_ROOTFS_DIR)

if(SIGMA_FOUND)
    set(SIGMA_INCLUDE_DIRS
        ${SIGMA_ROOTFS_INCLUDE_DIR}
        ${SIGMA_MRUA_INCLUDE_DIR})

    find_package_message(SIGMA
        "  ROOTFS: ${SIGMA_ROOTFS_DIR}"
        "${SIGMA_SDK_DIR}")
endif()
